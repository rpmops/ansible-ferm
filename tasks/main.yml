---

- name: Ensure ferm is installed
  yum:
    name: '{{ item }}'
    state: 'present'
  with_items: ferm_packages
  when: ferm|bool

- name: Install ferm configuration directories
  script: 'script/install-directories.sh creates=/etc/ferm/filter/input'

- name: Configure main ferm config file
  template:
    src: 'etc/ferm/ferm.conf.j2'
    dest: '/etc/ferm/ferm.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'

- name: Allow SSH access from Ansible Controller
  template:
    src: 'etc/ferm/filter-input.d/ansible_controller.conf.j2'
    dest: '/etc/ferm/filter-input.d/10_ansible_controller.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'

- name: Configure forwarding in iptables if enabled
  template:
    src: 'etc/ferm/ferm.d/10_forward.conf.j2'
    dest: '/etc/ferm/ferm.d/10_forward.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'

- name: Remove iptables rules if requested
  file:
    path: '/etc/ferm/{{ item.table | d("ferm.d") }}/{{ item.weight | default("50") }}_{{ item.filename | default(item.type + "_" + item.name | default((item.dport[0] if item.dport|d() else "rules"))) }}.conf'
    state: 'absent'
  with_flattened:
    - ferm_rules
    - ferm_group_rules
    - ferm_host_rules
    - ferm_dependent_rules
    - ferm_default_rules
  when: ((item.type is defined and item.type) and
         (item.delete is defined and item.delete | bool))
  tags: [ 'role::ferm:rules' ]

- name: Configure iptables rules
  template:
    src: 'etc/ferm/{{ item.category | d(item.table | d("ferm.d")) }}/{{ item.type }}.conf.j2'
    dest: '/etc/ferm/{{ item.table | d("ferm.d") }}/{{ item.weight | default("50") }}_{{ item.filename | default(item.type + "_" + item.name | default((item.dport[0] if item.dport|d() else "rules"))) }}.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'
  with_flattened:
    - ferm_rules
    - ferm_group_rules
    - ferm_host_rules
    - ferm_dependent_rules
    - ferm_default_rules
  when: ((item.type is defined and item.type) and
         (item.delete is undefined or not item.delete | bool))
  tags: [ 'role::ferm:rules' ]

- name: Remove iptables INPUT rules if requested
  file:
    path: '/etc/ferm/filter-input.d/{{ item.weight | default("50") }}_{{ item.filename | default(item.type + "_" + item.name | default((item.dport[0] if item.dport|d() else "rules"))) }}.conf'
    state: 'absent'
  with_flattened:
    - ferm_input_list
    - ferm_input_group_list
    - ferm_input_host_list
    - ferm_input_dependent_list
  when: ((item.type is defined and item.type) and
         (item.delete is defined and item.delete | bool))
  tags: [ 'role::ferm:rules' ]

- name: Configure iptables INPUT rules
  template:
    src: 'etc/ferm/filter-input.d/{{ item.type }}.conf.j2'
    dest: '/etc/ferm/filter-input.d/{{ item.weight | default("50") }}_{{ item.filename | default(item.type + "_" + item.name | default((item.dport[0] if item.dport|d() else "rules"))) }}.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'
  with_flattened:
    - ferm_input_list
    - ferm_input_group_list
    - ferm_input_host_list
    - ferm_input_dependent_list
  when: ((item.type is defined and item.type) and
         (item.delete is undefined or not item.delete | bool))
  tags: [ 'role::ferm:rules' ]

- name: Apply iptables rules if ferm is enabled
  shell: ferm /etc/ferm/ferm.conf
  changed_when: False
  when: ferm|bool
  tags: [ 'role::ferm:rules' ]

- name: Save iptables rules if ferm is enabled
  shell: /etc/init.d/{{ item }} save
  with_items: ferm_service_names
  changed_when: False
  when: ferm|bool
  tags: [ 'role::ferm:rules' ]

- name: Ensure iptables autostart
  service:
    name: '{{ item }}'
    enabled: 'yes'
  with_items: ferm_service_names
  when: ferm|bool
  tags: [ 'role::ferm:rules' ]

- name: Clear iptables rules if ferm is disabled
  service:
    name: '{{ item }}'
    state: 'stopped'
  with_items: ferm_service_names
  when: (not ferm | bool and ferm_flush | bool)
  tags: [ 'role::ferm:rules' ]

- name: Ensure that sysctl.d directory exists
  file:
    path: '/etc/sysctl.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Configure sysctl
  template:
    src: 'etc/sysctl.d/30-ferm.conf.j2'
    dest: '/etc/sysctl.d/30-ferm.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Reload sysctl' ]
  tags: [ 'role::ferm:rules' ]

- name: Save ferm local facts
  template:
    src: 'etc/ansible/facts.d/ferm.fact.j2'
    dest: '/etc/ansible/facts.d/ferm.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  tags: [ 'role::ferm:rules' ]

